plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.zerobase'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	//jwt 토큰
	//implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	//runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	//runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	//redis
	//implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	//lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//mariaDB
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

	//queryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    
    //amazon
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	//유효성 검사
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	//swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

	//테스트를 위한 의존성
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

//gradle clean 시에 QClass 디렉토리 삭제
clean {
	delete file('src/main/generated')
}

tasks.named('test') {
	useJUnitPlatform()
}
